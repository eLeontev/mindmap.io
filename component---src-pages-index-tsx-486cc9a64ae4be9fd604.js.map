{"version":3,"sources":["webpack:///./src/components/text-area.tsx","webpack:///./src/constants.ts","webpack:///./src/components/text-field.tsx","webpack:///./src/components/label.tsx","webpack:///./src/components/block.tsx","webpack:///./src/components/save-button.tsx","webpack:///./src/components/load-map-button.tsx","webpack:///./src/utils.ts","webpack:///./src/components/mind-map.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["ENTER_KEY_CODE","TAB_KEY_CODE","TextArea","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","onEnterUpdate","event","_this$props","props","id","value","closeLabel","which","trim","preventFocus","preventDefault","inheritsLoose_default","_proto","prototype","componentDidMount","textarea","focus","render","_this2","updateLabel","className","isEditMode","react_default","a","createElement","placeholder","ref","onKeyDown","onKeyPress","onChange","_ref","target","Component","TextField","switchLabelToEditMode","onClick","Label","block","blockData","containerClassName","hasChildren","labelClassName","isRoot","text_field_TextField","Object","assign","text_area_TextArea","Block","blocks","handlers","_block$isRoot","removeBlockWithChildren","childrenBlocks","filter","_ref2","parentID","shoudDisplaySeparator","souldDisplayRemoveButton","label_Label","map","key","renderCHildrenBlocks","SaveButton","exportMap","handleFileLoading","loadMindmap","fr","FileReader","onload","result","JSON","parse","readAsText","files","item","LoadMapButton","_ref3","type","accept","s4","Math","floor","random","toString","substring","guid","getNewBlock","elementsHandledOnCLick","rootBlock","MindMap","keyDown","_this$state","state","selectedBlockID","enableCreateNewBlock","some","keyCode","createNewSisterBlock","createNewChildrenBlock","setState","clickOnEmptySpace","targetClass","closeEditedLabelOnCLick","find","_ref4","createAndSelectNewBlock","_this$state$blocks$re","reduce","_ref5","hasEditedLabel","_block","_ref6","blockID","i","blockWithoutRootRemovedBlock","isRemovedBlockHasNotChildren","getBlocksWithoutChildrenOfRemoved","_ref7","parentIDarray","childrenIDarray","notChildrenBlocks","_ref8","push","Boolean","JSONMindmapContent","encodeURIComponent","stringify","link","document","href","download","click","remove","mindMap","console","log","addEventListener","componentWillUnmount","removeEventListener","save_button_SaveButton","load_map_button_LoadMapButton","block_Block","$export","__webpack_require__","$find","forced","P","F","callbackfn","undefined","ctx","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","that","val","res","O","self","f","index","speciesConstructor","original","isObject","isArray","SPECIES","C","constructor","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","source","flags","R","name","configurable","get"],"mappings":"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","file":"component---src-pages-index-tsx-486cc9a64ae4be9fd604.js","sourcesContent":["import React, { Component } from 'react';\nimport * as CONSTANTS from '../constants';\n\nimport './text-area.css';\n\nlet PLACEHOLDER = 'start type here to begin';\nlet { ENTER_KEY_CODE, TAB_KEY_CODE } = CONSTANTS;\n\nexport class TextArea extends Component<any, any> {\n    private textarea: any;\n    componentDidMount() {\n        this.textarea.focus();\n    }\n\n    onEnterUpdate = (event: any) => {\n        let { id, value, closeLabel } = this.props;\n\n        if (event.which === ENTER_KEY_CODE && value.trim()) {\n            closeLabel(id);\n        }\n    };\n\n    preventFocus = (event: any) => {\n        if (event.which === TAB_KEY_CODE) {\n            event.preventDefault();\n        }\n    };\n\n    render() {\n        let { props, onEnterUpdate, preventFocus } = this;\n        let { id, value, updateLabel, isEditMode } = props;\n\n        let className = isEditMode\n            ? 'editable-block'\n            : 'editable-block editable-block_hidden';\n\n        return (\n            <textarea\n                placeholder={PLACEHOLDER}\n                ref={(textarea) => (this.textarea = textarea)}\n                value={value}\n                className={className}\n                onKeyDown={preventFocus}\n                onKeyPress={onEnterUpdate}\n                onChange={({ target: { value } }) =>\n                    updateLabel(id, value.trim())\n                }\n            />\n        );\n    }\n}","export let elementsHandledOnCLick: string[] = [\n    'labels',\n    'label',\n    'label--text',\n    'editable-block',\n];\n\nexport let rootBlock: any = {\n    id: 0,\n    hasChildren: false,\n    isEditMode: true,\n    isRoot: true,\n    value: '',\n};\n\nexport let ENTER_KEY_CODE: number = 13;\nexport let TAB_KEY_CODE: number = 9;","import React from 'react';\nimport './text-field.css';\n\nexport let TextField = ({ id, value, isEditMode, switchLabelToEditMode }: any) => {\n    let className = isEditMode\n        ? 'label--text label-text_hidden'\n        : 'label--text';\n\n    return (\n        <p className={className} onClick={() => switchLabelToEditMode(id)}>\n            {value}\n        </p>\n    );\n};","import React from 'react';\nimport { TextArea } from './text-area';\nimport { TextField } from './text-field';\n\nimport './label.css';\n\nexport let Label = ({\n    block,\n    updateLabel,\n    closeLabel,\n    switchLabelToEditMode,\n}: any) => {\n    let { id, value, isEditMode, hasChildren, isRoot } = block;\n    let blockData = { id, value, isEditMode };\n\n    let containerClassName = hasChildren\n        ? 'labels labels_has_children'\n        : 'labels';\n    let labelClassName = isRoot ? 'label root' : 'label';\n\n    return (\n        <div className={containerClassName}>\n            <label className={labelClassName}>\n                <TextField\n                    {...blockData}\n                    switchLabelToEditMode={switchLabelToEditMode}\n                />\n                <TextArea\n                    {...blockData}\n                    updateLabel={updateLabel}\n                    closeLabel={closeLabel}\n                />\n            </label>\n        </div>\n    );\n};","\nimport React from 'react';\nimport { Label } from './label';\n\nimport './block.css';\n\nexport let Block = ({ block, blocks, handlers }: any) => {\n    let { id, hasChildren, isEditMode, isRoot = false } = block;\n    let { removeBlockWithChildren } = handlers;\n\n    let childrenBlocks = blocks.filter(({ parentID }: any) => parentID === id);\n    let shoudDisplaySeparator = childrenBlocks.length > 1;\n\n    let renderCHildrenBlocks = (childrenBlocks: any, blocks: any) =>\n        childrenBlocks.map((block: any) => (\n            <Block\n                key={block.id}\n                block={block}\n                blocks={blocks}\n                handlers={handlers}\n            />\n        ));\n\n    let souldDisplayRemoveButton = !(isEditMode || isRoot);\n    return (\n        <div className=\"block\">\n            <div className=\"block--label-container\">\n                <Label block={block} {...handlers} />\n                {souldDisplayRemoveButton && (\n                    <button\n                        className=\"block--remove-button\"\n                        onClick={() => removeBlockWithChildren(id)}\n                    />\n                )}\n            </div>\n            {hasChildren && (\n                <div className=\"block--children\">\n                    {shoudDisplaySeparator && (\n                        <div className=\"block--children-separator\" />\n                    )}\n                    {renderCHildrenBlocks(childrenBlocks, blocks)}\n                </div>\n            )}\n        </div>\n    );\n};","import React from 'react'\n\nexport const SaveButton = ({ exportMap }: any) => <button onClick={exportMap}>export to JSON</button>","import React from 'react'\n\nconst loadButtonLabel: string = 'load your own mind map'\nconst handleFileLoading = (loadMindmap: any) => ({ target }: any) => {\n    let fr = new FileReader();\n    fr.onload = ({target:  { result }}: any) => {\n        loadMindmap(JSON.parse(result));\n        target.value = '';\n    } \n    fr.readAsText(target.files.item(0));\n    \n}\nexport const LoadMapButton = ({ loadMindmap }: any) => (\n    <label>{loadButtonLabel}: <input id=\"loadJSONId\" type=\"file\" onChange={handleFileLoading(loadMindmap)} accept='.json'/></label>\n)","export let getNewBlock = (id: string, parentID: string) => ({\n    id,\n    parentID,\n    isEditMode: true,\n    hasChildren: false,\n    value: '',\n});\n\nlet s4 = (): string => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\n\nexport let guid = () => `${s4()}${s4()}- ${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`","import React, { Component } from 'react';\n\nimport { Block } from './block';\nimport { SaveButton } from './save-button'\nimport { LoadMapButton } from './load-map-button'\n\nimport * as CONSTANTS from '../constants'\nimport* as utils from '../utils';\n\nimport './mind-map.css';\n\nlet { guid, getNewBlock } = utils;\nlet {\n    elementsHandledOnCLick,\n    rootBlock,\n    ENTER_KEY_CODE,\n    TAB_KEY_CODE,\n} = CONSTANTS;\n\nexport class MindMap extends Component<any, any> {\n    private handlers: any;\n    \n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            selectedBlockID: 0,\n            enableCreateNewBlock: true,\n            blocks: [{ ...rootBlock }],\n        };\n\n        this.handlers = {\n            updateLabel: this.updateLabel,\n            closeLabel: this.closeLabel,\n            switchLabelToEditMode: this.switchLabelToEditMode,\n            removeBlockWithChildren: this.removeBlockWithChildren,\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.keyDown, false);\n        document.addEventListener('mousedown', this.clickOnEmptySpace, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keyDown, false);\n        document.removeEventListener('mousedown', this.clickOnEmptySpace, true);\n    }\n\n    keyDown = (event: any) => {\n        let { selectedBlockID, enableCreateNewBlock, blocks } = this.state;\n\n        let hasEditedBlocks = blocks.some(({ isEditMode }: any) => isEditMode);\n\n        if (hasEditedBlocks) {\n            return;\n        }\n\n        let { which: keyCode } = event;\n\n        switch (true) {\n            case keyCode === ENTER_KEY_CODE && enableCreateNewBlock: {\n                this.createNewSisterBlock(selectedBlockID);\n                break;\n            }\n            case keyCode === TAB_KEY_CODE: {\n                event.preventDefault();\n\n                this.createNewChildrenBlock(selectedBlockID);\n                break;\n            }\n            default: {\n                this.setState({\n                    enableCreateNewBlock: true,\n                });\n            }\n        }\n        /* eslint-enable indent */\n    };\n\n    clickOnEmptySpace = ({ target: { className: targetClass } }: any) => {\n        let isClickOnHandledElement = elementsHandledOnCLick.some(\n            (className) => className === targetClass\n        );\n\n        if (!isClickOnHandledElement) {\n            this.closeEditedLabelOnCLick();\n        }\n    };\n\n    switchLabelToEditMode = (id: string) => {\n        let { blocks } = this.state;\n\n        let hasEditedBlockWithEmptyLabel = blocks.find(\n            ({ isEditMode, value }: any) => isEditMode && !value.trim()\n        );\n\n        if (hasEditedBlockWithEmptyLabel) {\n            return;\n        }\n\n        blocks = blocks.map((block: any) => ({\n            ...block,\n            isEditMode: block.id === id,\n        }));\n\n        this.setState({\n            blocks,\n            selectedBlockID: id,\n        });\n    };\n\n    updateLabel = (id: string, value: string) => {\n        let { blocks } = this.state;\n\n        /* eslint-disable indent */\n        blocks = blocks.map(\n            (block: any) =>\n                block.id === id\n                    ? {\n                          ...block,\n                          value,\n                      }\n                    : block\n        );\n        /* eslint-enable indent */\n        this.setState({\n            blocks,\n        });\n    };\n\n    closeLabel = (selectedBlockID: string) => {\n        let { blocks } = this.state;\n\n        /* eslint-disable indent */\n        blocks = blocks.map(\n            (block: any) =>\n                block.id === selectedBlockID\n                    ? {\n                          ...block,\n                          isEditMode: false,\n                      }\n                    : block\n        );\n        /* eslint-enable indent */\n        this.setState({\n            blocks,\n            selectedBlockID,\n        });\n    };\n\n    createNewSisterBlock = (id: string) => {\n        if (id === rootBlock.id) {\n            return;\n        }\n\n        let { blocks } = this.state;\n        let { parentID } = blocks.find(({ id: currentID }: any) => currentID === id);\n\n        this.createAndSelectNewBlock(parentID, blocks);\n    };\n\n    createNewChildrenBlock = (parentID: string) => {\n        let { blocks } = this.state;\n\n        /* eslint-disable indent */\n        blocks = blocks.map(\n            (block: any) =>\n                block.id === parentID\n                    ? {\n                          ...block,\n                          hasChildren: true,\n                      }\n                    : block\n        );\n        /* eslint-enable indent */\n        this.createAndSelectNewBlock(parentID, blocks);\n    };\n\n    createAndSelectNewBlock = (parentID: string, blocks: any[]) => {\n        let selectedBlockID = guid();\n\n        this.setState({\n            blocks: [...blocks, getNewBlock(selectedBlockID, parentID)],\n            selectedBlockID,\n        });\n    };\n\n    closeEditedLabelOnCLick = () => {\n        /* eslint-disable-next-line react/destructuring-assignment */\n        let { hasEditedLabel, blocks } = this.state.blocks.reduce(\n            ({ blocks, hasEditedLabel }: any, block: any) => {\n                let { isEditMode, value } = block;\n\n                if (isEditMode && value.trim()) {\n                    block = { ...block, isEditMode: false };\n                    hasEditedLabel = true;\n                }\n\n                return {\n                    hasEditedLabel,\n                    blocks: [...blocks, block],\n                };\n            },\n            { blocks: [] }\n        );\n\n        if (hasEditedLabel) {\n            this.setState({ blocks });\n        }\n    };\n\n    removeBlockWithChildren = (id: string) => {\n        let selectedBlockID: string = '';\n        let { blocks } = this.state;\n\n        blocks = blocks\n            .filter(({ id: blockID, parentID }: any) => {\n                if (blockID === id) {\n                    selectedBlockID = parentID;\n                    return false;\n                }\n\n                return true;\n            })\n            .map((block: any, i: number, blockWithoutRootRemovedBlock: any) => {\n                let { id } = block;\n                let hasNotChildren = this.isRemovedBlockHasNotChildren(\n                    blockWithoutRootRemovedBlock,\n                    selectedBlockID,\n                    id\n                );\n\n                if (hasNotChildren) {\n                    return {\n                        ...block,\n                        hasChildren: false,\n                    };\n                }\n\n                return block;\n            });\n\n        blocks = this.getBlocksWithoutChildrenOfRemoved(blocks, [id]);\n\n        this.setState({\n            blocks,\n            selectedBlockID,\n        });\n    };\n\n    isRemovedBlockHasNotChildren = (\n        blockWithoutRootRemovedBlock: any,\n        parentID: any,\n        id: any\n    ) =>\n        id === parentID\n        && !blockWithoutRootRemovedBlock.find(\n            ({ parentID: blockParentID }: any) => blockParentID === parentID\n        );\n\n    getBlocksWithoutChildrenOfRemoved = (blocks: any[], parentIDarray: string[]) => {\n        let childrenIDarray: string[] = [];\n        let notChildrenBlocks = blocks.filter(({ id, parentID }) => {\n            if (parentIDarray.find((id) => id === parentID)) {\n                childrenIDarray.push(id);\n\n                return false;\n            }\n\n            return true;\n        });\n\n        let hasChildren = Boolean(childrenIDarray.length);\n        if (hasChildren) {\n            blocks = this.getBlocksWithoutChildrenOfRemoved(\n                notChildrenBlocks,\n                childrenIDarray\n            );\n        }\n\n        return blocks;\n    };\n\n    exportMap = () => {\n        const { blocks } = this.state;\n\n        const JSONMindmapContent: string = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(blocks));\n        const  link = document.createElement('a');\n        link.href = 'data:' + JSONMindmapContent;\n        link.download = 'mindmap.json';\n        link.click();\n        link.remove();\n    }\n\n    loadMindmap = (mindMap: any) => {\n        this.setState({\n            selectedBlockID: 0,\n            enableCreateNewBlock: true,\n            blocks: [...mindMap],\n\n        })\n        console.log(mindMap);\n        \n    }\n\n    render() {\n        let { blocks } = this.state;\n        let [rootBlock] = blocks;\n\n        return (\n            <div className=\"mind-map-container\">\n                <SaveButton exportMap={this.exportMap}/>\n                <LoadMapButton loadMindmap={this.loadMindmap} />\n                <div className=\"mind-map\">\n                    <Block\n                        block={rootBlock}\n                        blocks={blocks}\n                        handlers={this.handlers}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import { MindMap } from '../components/mind-map'\n\nexport default MindMap\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}